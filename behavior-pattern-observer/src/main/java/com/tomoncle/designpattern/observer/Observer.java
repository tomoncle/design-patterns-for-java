package com.tomoncle.designpattern.observer;

/**
 * 观察者模式是一种对象行为模式。
 *
 * 它定义对象间的一种一对多的依赖关系，当一个对象的状态发生改变时，所有依赖于它的对象都得到通知并被自动更新。
 * 观察者模式的主要的作用就是对对象解耦，将观察者和被观察者完全隔离。
 *
 * 1、观察者模式的优点
 * 观察者模式解除了主题和具体观察者的耦合，让耦合的双方都依赖于抽象，而不是依赖具体。
 *
 * 2、观察者模式的缺点
 * 开发和调试比较复杂，而且Java中的消息的通知默认是顺序执行的，一个观察者的卡顿会影响整体的执行效率。
 * 在这种情况下，一般考虑采用异步的方式。
 *
 *
 * 观察者接口
 * @author tomoncle
 */
public interface Observer<T> {
    /**
     * 更新触发
     *
     * @param t 参数
     */
    void update(T t);
}
